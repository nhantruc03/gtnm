[{"E:\\STUDY\\GTNM\\gtnm\\src\\index.js":"1","E:\\STUDY\\GTNM\\gtnm\\src\\reducer\\index.js":"2","E:\\STUDY\\GTNM\\gtnm\\src\\reportWebVitals.js":"3","E:\\STUDY\\GTNM\\gtnm\\src\\App.js":"4","E:\\STUDY\\GTNM\\gtnm\\src\\reducer\\yeucaumuahang_phongban.js":"5","E:\\STUDY\\GTNM\\gtnm\\src\\reducer\\yeucaumuahang_doanhnghiep.js":"6","E:\\STUDY\\GTNM\\gtnm\\src\\router\\routermodule.js":"7","E:\\STUDY\\GTNM\\gtnm\\src\\reducer\\donmuahang.js":"8","E:\\STUDY\\GTNM\\gtnm\\src\\router\\AppRoute.js":"9","E:\\STUDY\\GTNM\\gtnm\\src\\component\\page.js":"10","E:\\STUDY\\GTNM\\gtnm\\src\\component\\page1\\page1.js":"11","E:\\STUDY\\GTNM\\gtnm\\src\\component\\QuanLyMoiChaoGia\\QuanLyMoiChaoGia.js":"12","E:\\STUDY\\GTNM\\gtnm\\src\\component\\DonMuaHang\\donmuahang.js":"13","E:\\STUDY\\GTNM\\gtnm\\src\\component\\DonMuaHang\\lich.js":"14","E:\\STUDY\\GTNM\\gtnm\\src\\component\\DonMuaHang\\chotao.js":"15","E:\\STUDY\\GTNM\\gtnm\\src\\constants\\ActionType.js":"16","E:\\STUDY\\GTNM\\gtnm\\src\\component\\YeuCauMuaHang\\phongban\\ThemMoiYeuCau.js":"17","E:\\STUDY\\GTNM\\gtnm\\src\\component\\header.js":"18","E:\\STUDY\\GTNM\\gtnm\\src\\component\\subtable.js":"19","E:\\STUDY\\GTNM\\gtnm\\src\\action\\index.js":"20","E:\\STUDY\\GTNM\\gtnm\\src\\component\\drawer_item.js":"21","E:\\STUDY\\GTNM\\gtnm\\src\\component\\DonMuaHang\\danhsach.js":"22","E:\\STUDY\\GTNM\\gtnm\\src\\component\\YeuCauMuaHang\\phongban\\YeuCauPhongBan.js":"23","E:\\STUDY\\GTNM\\gtnm\\src\\component\\sider.js":"24","E:\\STUDY\\GTNM\\gtnm\\src\\component\\QuanLyMoiChaoGia\\ChaoGia_item.js":"25","E:\\STUDY\\GTNM\\gtnm\\src\\component\\search.js":"26"},{"size":682,"mtime":1608425388553,"results":"27","hashOfConfig":"28"},{"size":370,"mtime":1608878732960,"results":"29","hashOfConfig":"28"},{"size":375,"mtime":1607476813976,"results":"30","hashOfConfig":"28"},{"size":377,"mtime":1611386380601,"results":"31","hashOfConfig":"28"},{"size":2845,"mtime":1611386380730,"results":"32","hashOfConfig":"28"},{"size":2462,"mtime":1608939800456,"results":"33","hashOfConfig":"28"},{"size":1532,"mtime":1611386380733,"results":"34","hashOfConfig":"28"},{"size":1937,"mtime":1611386903129,"results":"35","hashOfConfig":"28"},{"size":275,"mtime":1607476813985,"results":"36","hashOfConfig":"28"},{"size":753,"mtime":1608425386073,"results":"37","hashOfConfig":"28"},{"size":818,"mtime":1608878732954,"results":"38","hashOfConfig":"28"},{"size":3572,"mtime":1611386903086,"results":"39","hashOfConfig":"28"},{"size":12460,"mtime":1611386903122,"results":"40","hashOfConfig":"28"},{"size":8435,"mtime":1611504281915,"results":"41","hashOfConfig":"28"},{"size":9882,"mtime":1611501979566,"results":"42","hashOfConfig":"28"},{"size":381,"mtime":1608939800454,"results":"43","hashOfConfig":"28"},{"size":18949,"mtime":1611504281962,"results":"44","hashOfConfig":"28"},{"size":7604,"mtime":1611501056005,"results":"45","hashOfConfig":"28"},{"size":4769,"mtime":1611386380718,"results":"46","hashOfConfig":"28"},{"size":1023,"mtime":1608939800420,"results":"47","hashOfConfig":"28"},{"size":2339,"mtime":1611386380653,"results":"48","hashOfConfig":"28"},{"size":9937,"mtime":1611504281928,"results":"49","hashOfConfig":"28"},{"size":11027,"mtime":1611556704539,"results":"50","hashOfConfig":"28"},{"size":2345,"mtime":1611504281965,"results":"51","hashOfConfig":"28"},{"size":5417,"mtime":1611504426207,"results":"52","hashOfConfig":"28"},{"size":1838,"mtime":1611504281924,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"17zassr",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"56"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"56"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"56"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"56"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"E:\\STUDY\\GTNM\\gtnm\\src\\index.js",[],["111","112"],"E:\\STUDY\\GTNM\\gtnm\\src\\reducer\\index.js",[],"E:\\STUDY\\GTNM\\gtnm\\src\\reportWebVitals.js",[],"E:\\STUDY\\GTNM\\gtnm\\src\\App.js",[],"E:\\STUDY\\GTNM\\gtnm\\src\\reducer\\yeucaumuahang_phongban.js",[],"E:\\STUDY\\GTNM\\gtnm\\src\\reducer\\yeucaumuahang_doanhnghiep.js",[],"E:\\STUDY\\GTNM\\gtnm\\src\\router\\routermodule.js",[],"E:\\STUDY\\GTNM\\gtnm\\src\\reducer\\donmuahang.js",[],"E:\\STUDY\\GTNM\\gtnm\\src\\router\\AppRoute.js",[],"E:\\STUDY\\GTNM\\gtnm\\src\\component\\page.js",[],"E:\\STUDY\\GTNM\\gtnm\\src\\component\\page1\\page1.js",[],"E:\\STUDY\\GTNM\\gtnm\\src\\component\\QuanLyMoiChaoGia\\QuanLyMoiChaoGia.js",["113","114","115","116"],"import { Col, Row, Badge, Card, Tag, Button, Drawer} from 'antd';\r\nimport { Content } from 'antd/lib/layout/layout';\r\nimport Title from 'antd/lib/typography/Title';\r\nimport React, { Component } from 'react';\r\nimport ChaoGia from './ChaoGia_item';\r\nimport Avatar from 'antd/lib/avatar/avatar';\r\n\r\nimport DrawerItem from '../drawer_item'\r\nclass QuanLyMoiChaoGia extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            visible: false,\r\n            data: [\r\n                {\r\n                    id: 1,\r\n                    src: './Photo.png',\r\n                    select: false\r\n                },\r\n                {\r\n                    id: 2,\r\n                    src: './2.png',\r\n                    select: false\r\n                },\r\n                {\r\n                    id: 3,\r\n                    src: './3.png',\r\n                    select: false\r\n                }\r\n            ]\r\n        };\r\n    }\r\n    showDrawer = () => {\r\n        this.setState({\r\n            visible: true,\r\n        });\r\n    };\r\n\r\n    onClose = () => {\r\n        this.setState({\r\n            visible: false,\r\n        });\r\n    };\r\n\r\n    renderAvatar = (data) => {\r\n        return (\r\n            data.map((e,key) => {\r\n                if (e.select === false) {\r\n                    return (\r\n                        <Avatar key={key} style={{ marginRight: '10px' }} size={50} src={e.src}>USER</Avatar>\r\n                    )\r\n                }\r\n                else {\r\n                    return (\r\n                        <div key={key} style={{marginRight:'10px', display:'inline'}}>\r\n                            <Badge count={<img src=\"./icon.png\" alt=\"\" ></img>} style={{marginRight:'10px'}}  >\r\n                                <Avatar  style={{ border: '4px solid #0E3E86' }} size={50} src={e.src}>USER</Avatar>\r\n                            </Badge>\r\n                        </div >\r\n                    )\r\n\r\n                }\r\n            })\r\n        )\r\n    }\r\n\r\n    renderNCC = (data) => {\r\n        return (\r\n            data.map((e,key) => {\r\n                if (e.select === false) {\r\n                    return (\r\n                        <DrawerItem data={e} select=\"1px solid #C9C9C9\" onSelect={(a) => this.onSelect(a)} key={key}></DrawerItem>\r\n                    )\r\n                }\r\n                else {\r\n                    return (\r\n                        <DrawerItem data={e} select=\"2px solid #1452B2\" onSelect={(a) => this.onSelect(a)} key={key}></DrawerItem>\r\n                    )\r\n\r\n                }\r\n            })\r\n        )\r\n    }\r\n\r\n    onSelect = (e) => {\r\n        var temp = []\r\n        this.state.data.forEach((o) => {\r\n            if (o.id === Number(e)) {\r\n                o.select = true\r\n            } else {\r\n                o.select = false\r\n            }\r\n            temp.push(o);\r\n        })\r\n        this.setState({\r\n            data: temp\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Content style={{ margin: '0 16px' }} >\r\n                <Row style={{ marginTop: 16, marginLeft: 16, marginRight: 30 }}>\r\n                    <Col span={8} wrapperCol={{ sm: 24 }}>\r\n                        <Title style={{ color: '#002140' }} level={3}>MỜI CHÀO GIÁ</Title>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <ChaoGia />\r\n                    <ChaoGia />\r\n                    <ChaoGia />\r\n                    <ChaoGia />\r\n                </Row>\r\n            </Content>\r\n\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default QuanLyMoiChaoGia;","E:\\STUDY\\GTNM\\gtnm\\src\\component\\DonMuaHang\\donmuahang.js",[],"E:\\STUDY\\GTNM\\gtnm\\src\\component\\DonMuaHang\\lich.js",[],"E:\\STUDY\\GTNM\\gtnm\\src\\component\\DonMuaHang\\chotao.js",["117"],"import React, { Component } from \"react\";\r\nimport { Table, Tag, Row, Col, Tooltip, Modal, Form } from \"antd\";\r\nimport { Content } from \"antd/lib/layout/layout\";\r\nimport Title from \"antd/lib/typography/Title\";\r\nimport Search from \"../search\";\r\nimport Subtable from \"../subtable\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormOutlined } from \"@ant-design/icons\";\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    span: 6,\r\n  },\r\n  wrapperCol: {\r\n    span: 14,\r\n  },\r\n};\r\n\r\nclass chotao extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      SearchData: [],\r\n      data: [],\r\n      modal2Visible: false,\r\n      model: { dondathang: [] },\r\n      columns: [\r\n        {\r\n          title: \"ID\",\r\n          dataIndex: \"ID\",\r\n          key: \"ID\",\r\n          sorter: (a, b) => a.ID - b.ID,\r\n        },\r\n        {\r\n          title: \"Tiêu đề\",\r\n          dataIndex: \"tieude\",\r\n          key: \"tieude\",\r\n          sorter: (a, b) => a.tieude.length - b.tieude.length,\r\n        },\r\n        {\r\n          title: \"Doanh nghiệp\",\r\n          dataIndex: \"tendoanhnghiep\",\r\n          key: \"tendoanhnghiep\",\r\n          sorter: (a, b) => a.tendoanhnghiep.length - b.tendoanhnghiep.length,\r\n        },\r\n        {\r\n          title: \"Sản phẩm\",\r\n          dataIndex: \"tensanpham\",\r\n          key: \"tensanpham\",\r\n          sorter: (a, b) => a.tensanpham.length - b.tensanpham.length,\r\n        },\r\n        {\r\n          title: \"Ngày nhận\",\r\n          dataIndex: \"ngaynhanhang\",\r\n          key: \"ngaynhanhang\",\r\n          sorter: (a, b) =>\r\n            new Date(a.ngaynhanhang).getTime() -\r\n            new Date(b.ngaynhanhang).getTime(),\r\n        },\r\n        {\r\n          title: \"tags\",\r\n          dataIndex: \"tags\",\r\n          key: \"tags\",\r\n          render: (tags) => (\r\n            <span>\r\n              {tags.map((tag) => {\r\n                let color = \"\";\r\n                if (tag === \"Đang đợi phê duyệt\") {\r\n                  color = \"yellow\";\r\n                } else if (tag === \"Đã phê duyệt\") {\r\n                  color = \"green\";\r\n                } else if (tag === \"Đã từ chối\") {\r\n                  color = \"red\";\r\n                }\r\n                return (\r\n                  <Tag className={`${color}`} key={tag}>\r\n                    {tag.toUpperCase()}\r\n                  </Tag>\r\n                );\r\n              })}\r\n            </span>\r\n          ),\r\n        },\r\n        {\r\n          title: \"Hành động\",\r\n          dataIndex: \"\",\r\n          key: \"x\",\r\n          render: (ID) => (\r\n            <div>\r\n              <Tooltip placement=\"bottom\" title=\"Xem\">\r\n                <a\r\n                  href=\"/#\"\r\n                  onClick={(e) => {\r\n                    e.preventDefault();\r\n                    this.setModal2Visible(true, ID);\r\n                  }}\r\n                >\r\n                  <img src=\"./View.png\" alt=\"\" />\r\n                </a>\r\n              </Tooltip>\r\n              <Tooltip placement=\"bottom\" title=\"Tạo đơn đặt hàng\">\r\n                <Link to={`/donmuahang/${ID.ID}`}>\r\n                  <img src=\"./edit.svg\" alt=\"\" />\r\n                </Link>\r\n              </Tooltip>\r\n            </div>\r\n          ),\r\n        },\r\n      ],\r\n      sub_columns: [\r\n        { title: \"ID\", dataIndex: \"ID\", key: \"ID\" },\r\n        {\r\n          title: \"Người đại diện\",\r\n          dataIndex: \"tennguoidaidien\",\r\n          key: \"tennguoidaidien\",\r\n        },\r\n        { title: \"Liên hệ\", dataIndex: \"email\", key: \"email\" },\r\n        { title: \"Chi tiết\", dataIndex: \"chitiet\", key: \"chitiet\" },\r\n        { title: \"Ngày tạo\", dataIndex: \"ngaytao\", key: \"ngaytao\" },\r\n        {\r\n          title: \"tags\",\r\n          dataIndex: \"tags\",\r\n          key: \"tags\",\r\n          render: (tags) => (\r\n            <span>\r\n              {tags.map((tag) => {\r\n                let color = \"\";\r\n                if (tag === \"Đang đợi phê duyệt\") {\r\n                  color = \"yellow\";\r\n                } else if (tag === \"Đã phê duyệt\") {\r\n                  color = \"green\";\r\n                } else if (tag === \"Đã từ chối\") {\r\n                  color = \"red\";\r\n                }\r\n                return (\r\n                  <Tag className={`${color}`} key={tag}>\r\n                    {tag.toUpperCase()}\r\n                  </Tag>\r\n                );\r\n              })}\r\n            </span>\r\n          ),\r\n        },\r\n        {\r\n          title: \"Hành động\",\r\n          dataIndex: \"\",\r\n          key: \"x\",\r\n          render: () => (\r\n            <a href=\"/#\">\r\n              <img src=\"./edit.svg\" alt=\"\" />\r\n            </a>\r\n          ),\r\n        },\r\n      ],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      data: this.props.data.filter(\r\n        (e) => e.tags.indexOf(\"Đã phê duyệt\") > -1 && e.dataodonhang === false\r\n      ),\r\n      SearchData: this.props.data.filter(\r\n        (e) => e.tags.indexOf(\"Đã phê duyệt\") > -1 && e.dataodonhang === false\r\n      ),\r\n    });\r\n  }\r\n  getSearchData = (data) => {\r\n    console.log(data);\r\n    this.setState({\r\n      SearchData: data,\r\n    });\r\n  };\r\n  setModal2Visible(modal2Visible, val) {\r\n    console.log(this.state.data);\r\n    console.log(\"value:\" + val);\r\n    this.setState({ modal2Visible });\r\n    if (val !== undefined) {\r\n      var temp = this.props.data.find((e) => e.ID === val);\r\n      console.log(temp);\r\n      this.setState({\r\n        model: val,\r\n      });\r\n      console.log(val);\r\n    }\r\n    console.log(this.state.model);\r\n  }\r\n\r\n  formRef = React.createRef();\r\n  renderModel = (val) => {\r\n    return (\r\n      <Form\r\n        ref={this.formRef}\r\n        name=\"validate_other\"\r\n        {...formItemLayout}\r\n        onFinish={(e) => this.onFinish(e)}\r\n        layout=\"vertical\"\r\n        defaultValue={val}\r\n      >\r\n        <Row>\r\n          <Col span={24}>\r\n            <Title>Thông tin khách hàng</Title>\r\n          </Col>\r\n          <Col span={12}>\r\n            <Form.Item label=\"Tên người đại diện\">\r\n              <p className=\"special\">{val.tennguoidaidien}</p>\r\n            </Form.Item>\r\n          </Col>\r\n          <Col span={12}>\r\n            <Form.Item label=\"Tên doanh nghiệp\">\r\n              <p className=\"special\">{val.tendoanhnghiep}</p>\r\n            </Form.Item>\r\n          </Col>\r\n          <Col span={12}>\r\n            <Form.Item label=\"Email\">\r\n              <p className=\"special\">{val.email}</p>\r\n            </Form.Item>\r\n          </Col>\r\n\r\n          <Col span={12}>\r\n            <Form.Item label=\"Số điện thoại\">\r\n              <p className=\"special\">{val.sdt}</p>\r\n            </Form.Item>\r\n          </Col>\r\n\r\n          <Col span={24}>\r\n            <Title>Thông tin yêu cầu</Title>\r\n          </Col>\r\n          <Col span={12}>\r\n            <Form.Item label=\"Tên sản phẩm\">\r\n              <p className=\"special\">{val.tensanpham}</p>\r\n            </Form.Item>\r\n          </Col>\r\n          <Col span={12}>\r\n            <Form.Item label=\"Ngày nhận hàng\">\r\n              <p className=\"special\">{val.ngaynhanhang}</p>\r\n            </Form.Item>\r\n          </Col>\r\n          <Col span={12}>\r\n            <Form.Item label=\"Số lượng\">\r\n              <p className=\"special\">{val.soluong}</p>\r\n            </Form.Item>\r\n          </Col>\r\n          <Col span={12}>\r\n            <Form.Item label=\"Đơn vị tính\">\r\n              <p className=\"special\">{val.donvitinh}</p>\r\n            </Form.Item>\r\n          </Col>\r\n          <Col span={12}>\r\n            <Form.Item label=\"Ghi chú\">\r\n              <p className=\"special\">{val.ghichu}</p>\r\n            </Form.Item>\r\n          </Col>\r\n          <Col span={12}>\r\n            <Form.Item label=\"Đơn đặt hàng\">\r\n              <ul>\r\n                {val.dondathang.map((e) => (\r\n                  <li key={e}>\r\n                    <a href=\"/#\">{e}</a>\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            </Form.Item>\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n    );\r\n  };\r\n  render() {\r\n    return (\r\n      <Content style={{ margin: \"0 16px\" }}>\r\n        <Title\r\n          style={{ marginLeft: 30, color: \"#002140\", marginTop: 15 }}\r\n          level={3}\r\n        >\r\n          Danh sách yêu cầu chờ tạo đơn hàng\r\n        </Title>\r\n\r\n        <Row style={{ marginLeft: 30, marginRight: 30 }}>\r\n          <Col span={12}>\r\n            <Search\r\n              columns={this.state.columns}\r\n              target=\"tieude\"\r\n              data={this.state.data}\r\n              getSearchData={(e) => this.getSearchData(e)}\r\n            />\r\n          </Col>\r\n        </Row>\r\n\r\n        <div\r\n          className=\"site-layout-background\"\r\n          style={{\r\n            padding: 24,\r\n            margin: 30,\r\n            marginTop: 10,\r\n            minHeight: 360,\r\n            borderRadius: \"10px\",\r\n          }}\r\n        >\r\n          <Table\r\n            expandRowByClick={true}\r\n            columns={this.state.columns}\r\n            expandable={{\r\n              expandedRowRender: (record) => (\r\n                <Subtable columns={this.state.sub_columns} data={record} />\r\n              ),\r\n              rowExpandable: (record) => record.name !== \"Not Expandable\",\r\n            }}\r\n            dataSource={this.state.SearchData}\r\n          />\r\n        </div>\r\n        <Modal\r\n          title=\"Chi tiết yêu cầu mua hàng\"\r\n          centered\r\n          visible={this.state.modal2Visible}\r\n          onOk={() => this.setModal2Visible(false)}\r\n          onCancel={() => this.setModal2Visible(false)}\r\n          width=\"50%\"\r\n          footer={false}\r\n        >\r\n          {this.renderModel(this.state.model)}\r\n        </Modal>\r\n      </Content>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    data: state.YCMH_PHONGBAN,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(chotao);\r\n","E:\\STUDY\\GTNM\\gtnm\\src\\constants\\ActionType.js",[],"E:\\STUDY\\GTNM\\gtnm\\src\\component\\YeuCauMuaHang\\phongban\\ThemMoiYeuCau.js",["118"],"import React, { Component } from \"react\";\r\nimport { Content } from \"antd/lib/layout/layout\";\r\nimport Title from \"antd/lib/typography/Title\";\r\nimport {\r\n  Form,\r\n  InputNumber,\r\n  Button,\r\n  Upload,\r\n  Row,\r\n  Col,\r\n  Input,\r\n  DatePicker,\r\n  message,\r\n  Divider,\r\n} from \"antd\";\r\nimport {\r\n  InboxOutlined,\r\n  LeftOutlined,\r\n  InfoCircleOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { connect } from \"react-redux\";\r\nimport { act_Add_YCMH_PHONGBAN } from \"../../../action\";\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    span: 6,\r\n  },\r\n  wrapperCol: {\r\n    span: 14,\r\n  },\r\n};\r\n\r\nconst normFile = (e) => {\r\n  console.log(\"Upload event:\", e);\r\n  e.fileList.forEach((a) => {\r\n    console.log(a.uid);\r\n  });\r\n  if (Array.isArray(e)) {\r\n    return e;\r\n  }\r\n\r\n  return e && e.fileList;\r\n};\r\n\r\nconst validateMessages = {\r\n  // eslint-disable-next-line\r\n  required: \"Cần nhập ${label}!\",\r\n  types: {\r\n    // eslint-disable-next-line\r\n    email: \"${label} phải thuộc dạng xxx@gxxx.xxx!\",\r\n    // eslint-disable-next-line\r\n    number: \"${label} phải là số!\",\r\n  },\r\n  number: {\r\n    // eslint-disable-next-line\r\n    range: \"${label} phải thuộc khoảng ${min} và ${max}\",\r\n  },\r\n};\r\nconst temp = `Thêm yêu cầu mới`;\r\nconst key = \"updatable\";\r\nclass ThemMoiYeuCau extends Component {\r\n  goBack = (e) => {\r\n    e.preventDefault();\r\n    this.props.history.goBack();\r\n  };\r\n  onFinish = (values) => {\r\n    var chititet = `${values.soluong} ${values.donvitinh}`;\r\n\r\n    var ngaynhanhang = new Date(\r\n      values.ngaynhanhang.toString()\r\n    ).toLocaleDateString();\r\n\r\n    var ngaytao = new Date(values.ngaytao.toString()).toLocaleDateString();\r\n    values.ngaynhanhang = ngaynhanhang;\r\n    values.ngaytao = ngaytao;\r\n\r\n    var dondathang = [];\r\n    if (values.dragger !== undefined) {\r\n      values.dragger.forEach((e) => {\r\n        dondathang.push(e.uid);\r\n      });\r\n    }\r\n\r\n    var data = { ...values, chitiet: chititet, dondathang: dondathang };\r\n\r\n    console.log(\"Received values of form: \", data);\r\n\r\n    message.loading({ content: \"Đang thực hiện thao tác...\", key });\r\n    setTimeout(() => {\r\n      message.success({\r\n        content: \"Thêm dữ liệu thành công!\",\r\n        key,\r\n        duration: 2,\r\n      });\r\n      this.props.history.goBack();\r\n    }, 2000);\r\n\r\n    this.props.onAdd(data);\r\n  };\r\n  render() {\r\n    return (\r\n      <Content style={{ margin: \"0 16px\" }}>\r\n        <Row style={{ marginTop: 15, marginLeft: 30, marginRight: 30 }}>\r\n          <Col span={8}>\r\n            <Title style={{ color: \"#002B6D\" }} level={3}>\r\n              <LeftOutlined onClick={this.goBack} href=\"/#\" />\r\n              <a style={{ color: \"#002B6D\" }} onClick={this.goBack} href=\"/#\">\r\n                {temp}\r\n              </a>\r\n            </Title>\r\n          </Col>\r\n        </Row>\r\n\r\n        <div\r\n          className=\"site-layout-background\"\r\n          style={{\r\n            padding: \"16px 24px 16px 24px\",\r\n            margin: 30,\r\n            marginTop: 10,\r\n            minHeight: 360,\r\n            borderRadius: \"10px\",\r\n          }}\r\n        >\r\n          <Form\r\n            name=\"validate_other\"\r\n            {...formItemLayout}\r\n            onFinish={(e) => this.onFinish(e)}\r\n            layout=\"vertical\"\r\n            validateMessages={validateMessages}\r\n          >\r\n            <Row>\r\n              <Col span={24}>\r\n                <Title level={4}>Thông tin khách hàng</Title>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Form.Item\r\n                  wrapperCol={{ sm: 24 }}\r\n                  style={{ width: \"90%\" }}\r\n                  label=\"Tên doanh nghiệp\"\r\n                  required\r\n                >\r\n                  <Form.Item\r\n                    name=\"tendoanhnghiep\"\r\n                    noStyle\r\n                    label=\"Tên doanh nghiệp\"\r\n                    rules={[{ required: true }]}\r\n                  >\r\n                    <Input placeholder=\"Eg.Tên doanh nghiệp\" />\r\n                  </Form.Item>\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Form.Item\r\n                  wrapperCol={{ sm: 24 }}\r\n                  style={{ width: \"90%\" }}\r\n                  label=\"Tên người đại diện\"\r\n                  tooltip={{\r\n                    title: \"Tooltip with customize icon\",\r\n                    icon: <InfoCircleOutlined />,\r\n                  }}\r\n                >\r\n                  <Form.Item\r\n                    name=\"tennguoidaidien\"\r\n                    label=\"Tên người đại diện\"\r\n                    noStyle\r\n                  >\r\n                    <Input placeholder=\"Eg.Lisa\" />\r\n                  </Form.Item>\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Form.Item\r\n                  wrapperCol={{ sm: 24 }}\r\n                  style={{ width: \"90%\" }}\r\n                  label=\"Email\"\r\n                  required\r\n                >\r\n                  <Form.Item\r\n                    name=\"email\"\r\n                    noStyle\r\n                    label=\"Email\"\r\n                    rules={[{ required: true }]}\r\n                  >\r\n                    <Input placeholder=\"Eg.100\" />\r\n                  </Form.Item>\r\n                </Form.Item>\r\n              </Col>\r\n\r\n              <Col span={12}>\r\n                <Form.Item\r\n                  wrapperCol={{ sm: 24 }}\r\n                  style={{ width: \"90%\" }}\r\n                  label=\"Số điện thoại\"\r\n                  required\r\n                >\r\n                  <Form.Item\r\n                    name=\"sdt\"\r\n                    noStyle\r\n                    label=\"Số điện thoại\"\r\n                    rules={[{ required: true, type: \"number\" }]}\r\n                  >\r\n                    <InputNumber\r\n                      style={{ width: \"100%\" }}\r\n                      placeholder=\"Eg.100\"\r\n                    />\r\n                  </Form.Item>\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={24}>\r\n                <Title level={4}>Thông tin yêu cầu </Title>\r\n              </Col>\r\n              <Col span={7}>\r\n                <Form.Item\r\n                  wrapperCol={{ sm: 24 }}\r\n                  style={{ width: \"90%\" }}\r\n                  label=\"Tên sản phẩm\"\r\n                  required\r\n                >\r\n                  <Form.Item\r\n                    name=\"tensanpham\"\r\n                    noStyle\r\n                    label=\"Tên sản phẩm\"\r\n                    rules={[{ required: true }]}\r\n                  >\r\n                    <Input placeholder=\"Eg.Tên sản phẩm\" />\r\n                  </Form.Item>\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={5}>\r\n                <Form.Item\r\n                  wrapperCol={{ sm: 21 }}\r\n                  style={{ width: \"90%\" }}\r\n                  label=\"Số lượng\"\r\n                  required\r\n                >\r\n                  <Form.Item\r\n                    name=\"soluong\"\r\n                    noStyle\r\n                    label=\"Số lượng\"\r\n                    rules={[{ required: true }]}\r\n                  >\r\n                    <InputNumber\r\n                      style={{ width: \"100%\" }}\r\n                      placeholder=\"Eg.Đơn giá\"\r\n                    />\r\n                  </Form.Item>\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={5}>\r\n                <Form.Item\r\n                  wrapperCol={{ sm: 24 }}\r\n                  style={{ width: \"90%\" }}\r\n                  label=\"Đơn vị tính\"\r\n                  required\r\n                >\r\n                  <Form.Item\r\n                    name=\"donvitinh\"\r\n                    noStyle\r\n                    label=\"Đơn vị tính\"\r\n                    rules={[{ required: true, type: \"number\" }]}\r\n                  >\r\n                    <InputNumber\r\n                      style={{ width: \"100%\" }}\r\n                      placeholder=\"Eg.Tổng tiền\"\r\n                    />\r\n                  </Form.Item>\r\n                </Form.Item>\r\n              </Col>\r\n\r\n              <Col span={7}>\r\n                <Form.Item\r\n                  wrapperCol={{ sm: 22 }}\r\n                  style={{ width: \"90%\" }}\r\n                  label=\"Ngày nhận hàng\"\r\n                  required\r\n                >\r\n                  <Form.Item\r\n                    name=\"ngaynhanhang\"\r\n                    label=\"Ngày nhận hàng\"\r\n                    noStyle\r\n                    rules={[{ required: true }]}\r\n                  >\r\n                    <DatePicker placeholder=\"Chọn ngày\" />\r\n                  </Form.Item>\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Form.Item\r\n                  wrapperCol={{ sm: 24 }}\r\n                  style={{ width: \"90%\" }}\r\n                  label=\"Mô tả yêu cầu\"\r\n                  required\r\n                >\r\n                  <Form.Item\r\n                    name=\"motayeucau\"\r\n                    noStyle\r\n                    label=\"Mô tả yêu cầu\"\r\n                    rules={[{ required: true }]}\r\n                  >\r\n                    <Input.TextArea rows={6} placeholder=\"Eg.mô tả yêu cầu\" />\r\n                  </Form.Item>\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Form.Item\r\n                  wrapperCol={{ sm: 24 }}\r\n                  style={{ width: \"90%\" }}\r\n                  label=\"Đơn đặt hàng liên quan\"\r\n                >\r\n                  <Form.Item\r\n                    name=\"dragger\"\r\n                    valuePropName=\"fileList\"\r\n                    getValueFromEvent={normFile}\r\n                    noStyle\r\n                  >\r\n                    <Upload.Dragger\r\n                      style={{ width: \"100%\" }}\r\n                      name=\"files\"\r\n                      action=\"/upload.do\"\r\n                    >\r\n                      <p className=\"ant-upload-text\">\r\n                        Thả tệp vào đây hoặc chọn từ trình duyệt{\" \"}\r\n                      </p>\r\n                      <p className=\"ant-upload-hint\">\r\n                        VD: pdf, docs, exls, ...{\" \"}\r\n                      </p>\r\n                      <p className=\"ant-upload-drag-icon\">\r\n                        <InboxOutlined />\r\n                      </p>\r\n                    </Upload.Dragger>\r\n                  </Form.Item>\r\n                </Form.Item>\r\n              </Col>\r\n\r\n              {/* <Col span={24}>\r\n                <Title style={{color:\"002B6D\"}} level={4}>Thông tin khách hàng</Title>\r\n                </Col>\r\n              <Col span={12}>\r\n                <Form.Item\r\n                  wrapperCol={{ sm: 24 }}\r\n                  style={{ width: \"90%\" }}\r\n                  label=\"Tên người đại diện\"\r\n                  required\r\n                >\r\n                  <Form.Item\r\n                    name=\"tennguoidaidien\"\r\n                    label=\"Tên người đại diện\"\r\n                    rules={[{ required: true }]}\r\n                    noStyle\r\n                  >\r\n                    <Input placeholder=\"Eg.Tên người đại diện\" />\r\n                  </Form.Item>\r\n                </Form.Item>\r\n                <Form.Item\r\n                  wrapperCol={{ sm: 24 }}\r\n                  style={{ width: \"90%\" }}\r\n                  label=\"Tên doanh nghiệp\"\r\n                  required\r\n                >\r\n                  <Form.Item\r\n                    name=\"tendoanhnghiep\"\r\n                    noStyle\r\n                    label=\"Tên doanh nghiệp\"\r\n                    rules={[{ required: true }]}\r\n                  >\r\n                    <Input placeholder=\"Eg.Tên doanh nghiệp\" />\r\n                  </Form.Item>\r\n                </Form.Item>\r\n                <Form.Item\r\n                  wrapperCol={{ sm: 24 }}\r\n                  style={{ width: \"90%\" }}\r\n                  label=\"Email\"\r\n                  required\r\n                >\r\n                  <Form.Item\r\n                    name=\"email\"\r\n                    noStyle\r\n                    label=\"Email\"\r\n                    rules={[{ required: true, type: \"email\" }]}\r\n                  >\r\n                    <Input placeholder=\"Eg.example@gmail.com\" />\r\n                  </Form.Item>\r\n                </Form.Item>\r\n                <Form.Item\r\n                  wrapperCol={{ sm: 24 }}\r\n                  style={{ width: \"90%\" }}\r\n                  label=\"SĐT\"\r\n                  required\r\n                >\r\n                  <Form.Item\r\n                    name=\"sdt\"\r\n                    noStyle\r\n                    label=\"SĐT\"\r\n                    rules={[{ required: true, type: \"number\" }]}\r\n                  >\r\n                    <InputNumber\r\n                      style={{ width: \"100%\" }}\r\n                      placeholder=\"Eg.0919...\"\r\n                    />\r\n                  </Form.Item>\r\n                </Form.Item>\r\n                <Form.Item\r\n                  wrapperCol={{ sm: 24 }}\r\n                  style={{ width: \"90%\" }}\r\n                  label=\"Số lượng\"\r\n                  required\r\n                >\r\n                  <Form.Item\r\n                    name=\"soluong\"\r\n                    noStyle\r\n                    label=\"Số lượng\"\r\n                    rules={[{ required: true, type: \"number\" }]}\r\n                  >\r\n                    <InputNumber\r\n                      style={{ width: \"50%\" }}\r\n                      placeholder=\"Eg.100\"\r\n                    />\r\n                  </Form.Item>\r\n                </Form.Item>\r\n                <Form.Item\r\n                  wrapperCol={{ sm: 24 }}\r\n                  style={{ width: \"90%\" }}\r\n                  label=\"Đơn vị tính\"\r\n                  required\r\n                >\r\n                  <Form.Item\r\n                    name=\"donvitinh\"\r\n                    noStyle\r\n                    label=\"Đơn vị tính\"\r\n                    rules={[{ required: true }]}\r\n                  >\r\n                    <Input placeholder=\"Eg.cái\" />\r\n                  </Form.Item>\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Row>\r\n                  <Col span={12}>\r\n                    <Form.Item wrapperCol={{ sm: 22 }} label=\"Tiêu đề\" required>\r\n                      <Form.Item\r\n                        name=\"tieude\"\r\n                        noStyle\r\n                        label=\"Tiêu đề\"\r\n                        rules={[{ required: true }]}\r\n                      >\r\n                        <Input placeholder=\"Eg.cái\" />\r\n                      </Form.Item>\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col span={12}>\r\n                    <Form.Item\r\n                      wrapperCol={{ sm: 19 }}\r\n                      label=\"Ngày tạo\"\r\n                      required\r\n                    >\r\n                      <Form.Item name=\"ngaytao\" noStyle>\r\n                        <DatePicker placeholder=\"Chọn ngày\" />\r\n                      </Form.Item>\r\n                    </Form.Item>\r\n                  </Col>\r\n                </Row>\r\n\r\n                <Form.Item\r\n                  wrapperCol={{ sm: 24 }}\r\n                  style={{ width: \"90%\" }}\r\n                  label=\"Mô tả yêu cầu\"\r\n                  required\r\n                >\r\n                  <Form.Item\r\n                    name=\"motayeucau\"\r\n                    noStyle\r\n                    label=\"Mô tả yêu cầu\"\r\n                    rules={[{ required: true }]}\r\n                  >\r\n                    <Input.TextArea rows={6} placeholder=\"Eg.mô tả yêu cầu\" />\r\n                  </Form.Item>\r\n                </Form.Item>\r\n\r\n                <Row>\r\n                  <Col span={12}>\r\n                    <Form.Item\r\n                      wrapperCol={{ sm: 22 }}\r\n                      style={{ width: \"100%\" }}\r\n                      label=\"Tên sản phẩm\"\r\n                      required\r\n                    >\r\n                      <Form.Item\r\n                        name=\"tensanpham\"\r\n                        noStyle\r\n                        label=\"Tên sản phẩm\"\r\n                        rules={[{ required: true }]}\r\n                      >\r\n                        <Input placeholder=\"Eg.Tên sản phẩm\" />\r\n                      </Form.Item>\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col span={12}>\r\n                    <Form.Item\r\n                      wrapperCol={{ sm: 19 }}\r\n                      style={{ width: \"100%\" }}\r\n                      label=\"Ngày nhận hàng\"\r\n                      required\r\n                    >\r\n                      <Form.Item name=\"ngaynhanhang\" noStyle>\r\n                        <DatePicker placeholder=\"Chọn ngày\" />\r\n                      </Form.Item>\r\n                    </Form.Item>\r\n                  </Col>\r\n                </Row>\r\n\r\n                <Form.Item\r\n                  wrapperCol={{ sm: 24 }}\r\n                  style={{ width: \"90%\" }}\r\n                  label=\"Đơn đặt hàng liên quan\"\r\n                >\r\n                  <Form.Item\r\n                    name=\"dragger\"\r\n                    valuePropName=\"fileList\"\r\n                    getValueFromEvent={normFile}\r\n                    noStyle\r\n                  >\r\n                    <Upload.Dragger\r\n                      style={{ width: \"100%\" }}\r\n                      name=\"files\"\r\n                      action=\"/upload.do\"\r\n                    >\r\n                      <p className=\"ant-upload-text\">\r\n                        Thả tệp vào đây hoặc chọn từ trình duyệt\r\n                      </p>\r\n                      <p className=\"ant-upload-hint\">\r\n                        VD: pdf, docs, exls, ...\r\n                      </p>\r\n                      <p className=\"ant-upload-drag-icon\">\r\n                        <InboxOutlined />\r\n                      </p>\r\n                    </Upload.Dragger>\r\n                  </Form.Item>\r\n                </Form.Item>\r\n              </Col> */}\r\n            </Row>\r\n            <Form.Item wrapperCol={{ span: 24, offset: 9 }}>\r\n              <Button\r\n                onClick={this.goBack}\r\n                className=\"back\"\r\n                style={{ width: 150, marginRight: 20 }}\r\n              >\r\n                Hủy\r\n              </Button>\r\n              <Button htmlType=\"submit\" className=\"add\" style={{ width: 150 }}>\r\n                Tạo mới\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n        </div>\r\n      </Content>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onAdd: (YCMH) => {\r\n      dispatch(act_Add_YCMH_PHONGBAN(YCMH));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(ThemMoiYeuCau);\r\n","E:\\STUDY\\GTNM\\gtnm\\src\\component\\header.js",[],"E:\\STUDY\\GTNM\\gtnm\\src\\component\\subtable.js",[],"E:\\STUDY\\GTNM\\gtnm\\src\\action\\index.js",[],"E:\\STUDY\\GTNM\\gtnm\\src\\component\\drawer_item.js",[],"E:\\STUDY\\GTNM\\gtnm\\src\\component\\DonMuaHang\\danhsach.js",["119"],"import React, { Component } from \"react\";\r\nimport { Table, Tag, Row, Col, Tooltip, Form, Modal } from \"antd\";\r\nimport { Content } from \"antd/lib/layout/layout\";\r\nimport Title from \"antd/lib/typography/Title\";\r\nimport Search from \"../search\";\r\nimport Subtable from \"../subtable\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { EditOutlined } from \"@ant-design/icons\";\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    span: 6,\r\n  },\r\n  wrapperCol: {\r\n    span: 14,\r\n  },\r\n};\r\n\r\nclass danhsach extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: this.props.data,\r\n      SearchData: this.props.data,\r\n      modal2Visible: false,\r\n      model: { dondathang: [] },\r\n      columns: [\r\n        {\r\n          title: \"ID\",\r\n          dataIndex: \"ID\",\r\n          key: \"ID\",\r\n          sorter: (a, b) => a.ID - b.ID,\r\n        },\r\n        {\r\n          title: \"Nhà cung cấp\",\r\n          dataIndex: \"tennhacungcap\",\r\n          key: \"tennhacungcap\",\r\n          sorter: (a, b) => a.tennhacungcap.length - b.tennhacungcap.length,\r\n        },\r\n        {\r\n          title: \"Sản phẩm\",\r\n          dataIndex: \"tensanpham\",\r\n          key: \"tensanpham\",\r\n          sorter: (a, b) => a.tensanpham.length - b.tensanpham.length,\r\n        },\r\n        {\r\n          title: \"Số lượng\",\r\n          dataIndex: \"chitiet\",\r\n          key: \"chitiet\",\r\n          sorter: (a, b) => a.soluong - b.soluong,\r\n        },\r\n        {\r\n          title: \"Đơn giá\",\r\n          dataIndex: \"dongia\",\r\n          key: \"dongia\",\r\n          sorter: (a, b) => a.dongia - b.dongia,\r\n        },\r\n        {\r\n          title: \"Thành tiền\",\r\n          dataIndex: \"tongtien\",\r\n          key: \"tongtien\",\r\n          sorter: (a, b) => a.tongtien - b.tongtien,\r\n        },\r\n        {\r\n          title: \"Trạng thái\",\r\n          dataIndex: \"tags\",\r\n          key: \"tags\",\r\n          render: (tags) => (\r\n            <span>\r\n              {tags.map((tag) => {\r\n                let color = \"\";\r\n                if (tag === \"Đang đợi phê duyệt\") {\r\n                  color = \"yellow\";\r\n                } else if (tag === \"Đã phê duyệt\") {\r\n                  color = \"green\";\r\n                } else if (tag === \"Đã từ chối\") {\r\n                  color = \"red\";\r\n                }\r\n                return (\r\n                  <Tag className={`${color}`} key={tag}>\r\n                    {tag}\r\n                  </Tag>\r\n                );\r\n              })}\r\n            </span>\r\n          ),\r\n        },\r\n        {\r\n          title: \"Hành động\",\r\n          dataIndex: \"\",\r\n          key: \"x\",\r\n          render: (ID) => (\r\n            <div>\r\n              <Tooltip placement=\"bottom\" title=\"Xem\">\r\n                <a\r\n                  href=\"/#\"\r\n                  onClick={(e) => {\r\n                    e.preventDefault();\r\n                    this.setModal2Visible(true, ID);\r\n                  }}\r\n                >\r\n                  <img src=\"./View.png\" alt=\"\" />\r\n                </a>\r\n              </Tooltip>\r\n            </div>\r\n          ),\r\n        },\r\n      ],\r\n      sub_columns: [\r\n        { title: \"ID\", dataIndex: \"ID\", key: \"ID\" },\r\n        { title: \"Email\", dataIndex: \"emailncc\", key: \"emailncc\" },\r\n        { title: \"Số điện thoại\", dataIndex: \"sdtncc\", key: \"sdtncc\" },\r\n        { title: \"Ngày nhận\", dataIndex: \"ngaynhanhang\", key: \"ngaynhanhang\" },\r\n        {\r\n          title: \"Ngày thanh toán\",\r\n          dataIndex: \"ngaythanhtoan\",\r\n          key: \"ngaythanhtoan\",\r\n        },\r\n        {\r\n          title: \"tags\",\r\n          dataIndex: \"tags\",\r\n          key: \"tags\",\r\n          render: (tags) => (\r\n            <span>\r\n              {tags.map((tag) => {\r\n                let color = \"\";\r\n                if (tag === \"Đang đợi phê duyệt\") {\r\n                  color = \"yellow\";\r\n                } else if (tag === \"Đã phê duyệt\") {\r\n                  color = \"green\";\r\n                } else if (tag === \"Đã từ chối\") {\r\n                  color = \"red\";\r\n                }\r\n                return <Tag className={`${color}`} key={tag}></Tag>;\r\n              })}\r\n            </span>\r\n          ),\r\n        },\r\n        {\r\n          title: \"Hành động\",\r\n          dataIndex: \"\",\r\n          key: \"x\",\r\n          render: (ID) => (\r\n            <Link to={`/donmuahang/${ID}`}>\r\n              <img src=\"./edit.svg\" alt=\"\" />\r\n            </Link>\r\n          ),\r\n        },\r\n      ],\r\n    };\r\n  }\r\n\r\n  getSearchData = (data) => {\r\n    console.log(data);\r\n    this.setState({\r\n      SearchData: data,\r\n    });\r\n  };\r\n  setModal2Visible(modal2Visible, val) {\r\n    console.log(val);\r\n    this.setState({ modal2Visible });\r\n    if (val !== undefined) {\r\n      var temp = this.props.data.find((e) => e.ID === val);\r\n      console.log(temp);\r\n      this.setState({\r\n        model: val,\r\n      });\r\n      console.log(val);\r\n    }\r\n    console.log(this.state.model);\r\n  }\r\n  formRef = React.createRef();\r\n  renderModel = (val) => {\r\n    console.log(this.state.model);\r\n    console.log(val);\r\n    return (\r\n      <Form\r\n        ref={this.formRef}\r\n        name=\"validate_other\"\r\n        {...formItemLayout}\r\n        onFinish={(e) => this.onFinish(e)}\r\n        layout=\"vertical\"\r\n        defaultValue={val}\r\n      >\r\n        <Row>\r\n          <Col span={24}>\r\n            <Title>Thông tin đơn mua hàng</Title>\r\n          </Col>\r\n          <Col span={12}>\r\n            <Form.Item wrapperCol={{ sm: 24 }} label=\"Mã đơn hàng\">\r\n              <p className=\"special\">{val.ID}</p>\r\n            </Form.Item>\r\n          </Col>\r\n          <Col span={12}>\r\n            <Form.Item wrapperCol={{ sm: 24 }} label=\"Người phụ trách\">\r\n              <p className=\"special\">{val.nguoiphutrach}</p>\r\n            </Form.Item>\r\n          </Col>\r\n          <Col span={12}>\r\n            <Form.Item wrapperCol={{ sm: 24 }} label=\"Tên hàng\">\r\n              <p className=\"special\">{val.tensanpham}</p>\r\n            </Form.Item>\r\n          </Col>\r\n\r\n          <Col span={12}>\r\n            <Form.Item wrapperCol={{ sm: 24 }} label=\"Số lượng\">\r\n              <p className=\"special\">{val.soluong}</p>\r\n            </Form.Item>\r\n          </Col>\r\n          <Col span={12}>\r\n            <Form.Item wrapperCol={{ sm: 24 }} label=\"Đơn giá\">\r\n              <p className=\"special\">{val.dongia}</p>\r\n            </Form.Item>\r\n          </Col>\r\n          <Col span={12}>\r\n            <Form.Item wrapperCol={{ sm: 24 }} label=\"Thành tiền\">\r\n              <p className=\"special\">{val.thanhtien}</p>\r\n            </Form.Item>\r\n          </Col>\r\n          <Col span={12}>\r\n            <Form.Item wrapperCol={{ sm: 24 }} label=\"Ngày nhận hàng\">\r\n              <p className=\"special\">{val.ngaynhanhang}</p>\r\n            </Form.Item>\r\n          </Col>\r\n          <Col span={12}>\r\n            <Form.Item wrapperCol={{ sm: 24 }} label=\"Thanh toán\">\r\n              <p className=\"special\">{val.ngaythanhtoan}</p>\r\n            </Form.Item>\r\n          </Col>\r\n\r\n          <Col span={24}>\r\n            <Title>Thông tin nhà cung cấp</Title>\r\n          </Col>\r\n          <Col span={12}>\r\n            <Form.Item wrapperCol={{ sm: 24 }} label=\"Nhà cung cấp\">\r\n              <p className=\"special\">{val.tennhacungcap}</p>\r\n            </Form.Item>\r\n          </Col>\r\n          <Col span={12}>\r\n            <Form.Item wrapperCol={{ sm: 24 }} label=\"Email\">\r\n              <p className=\"special\">{val.emailncc}</p>\r\n            </Form.Item>\r\n          </Col>\r\n          <Col span={12}>\r\n            <Form.Item wrapperCol={{ sm: 24 }} label=\"Số điện thoại\">\r\n              <p className=\"special\">{val.sdtncc}</p>\r\n            </Form.Item>\r\n          </Col>\r\n          <Col span={12}>\r\n            <Form.Item wrapperCol={{ sm: 24 }} label=\"Người đại diện\">\r\n              <p className=\"special\">{val.nguoidaidien}</p>\r\n            </Form.Item>\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n    );\r\n  };\r\n  render() {\r\n    return (\r\n      <Content style={{ margin: \"0 16px\" }}>\r\n        <Title\r\n          style={{ marginLeft: 30, color: \"#002140\", marginTop: 15 }}\r\n          level={3}\r\n        >\r\n          Danh sách đơn mua hàng\r\n        </Title>\r\n\r\n        <Row style={{ marginLeft: 30, marginRight: 30 }}>\r\n          <Col span={12}>\r\n            <Search\r\n              columns={this.state.columns}\r\n              target=\"title\"\r\n              data={this.state.data}\r\n              getSearchData={(e) => this.getSearchData(e)}\r\n            />\r\n          </Col>\r\n        </Row>\r\n\r\n        <div\r\n          className=\"site-layout-background\"\r\n          style={{\r\n            padding: 24,\r\n            margin: 30,\r\n            marginTop: 10,\r\n            minHeight: 360,\r\n            borderRadius: \"10px\",\r\n          }}\r\n        >\r\n          <Table\r\n            expandRowByClick={true}\r\n            expand\r\n            columns={this.state.columns}\r\n            expandable={{\r\n              expandedRowRender: (record) => (\r\n                <Subtable\r\n                  columns={this.state.sub_columns}\r\n                  data={record}\r\n                  renderStep={true}\r\n                />\r\n              ),\r\n              rowExpandable: (record) => record.name !== \"Not Expandable\",\r\n            }}\r\n            dataSource={this.state.SearchData}\r\n          />\r\n        </div>\r\n\r\n        <Modal\r\n          title=\"Chi tiết đơn mua hàng\"\r\n          centered\r\n          visible={this.state.modal2Visible}\r\n          onOk={() => this.setModal2Visible(false)}\r\n          onCancel={() => this.setModal2Visible(false)}\r\n          width=\"50%\"\r\n          footer={false}\r\n        >\r\n          {this.renderModel(this.state.model)}\r\n        </Modal>\r\n      </Content>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    data: state.DONMUAHANG,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(danhsach);\r\n","E:\\STUDY\\GTNM\\gtnm\\src\\component\\YeuCauMuaHang\\phongban\\YeuCauPhongBan.js",["120"],"E:\\STUDY\\GTNM\\gtnm\\src\\component\\sider.js",[],"E:\\STUDY\\GTNM\\gtnm\\src\\component\\QuanLyMoiChaoGia\\ChaoGia_item.js",[],"E:\\STUDY\\GTNM\\gtnm\\src\\component\\search.js",[],{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","severity":1,"message":"126","line":1,"column":27,"nodeType":"127","messageId":"128","endLine":1,"endColumn":31},{"ruleId":"125","severity":1,"message":"129","line":1,"column":33,"nodeType":"127","messageId":"128","endLine":1,"endColumn":36},{"ruleId":"125","severity":1,"message":"130","line":1,"column":38,"nodeType":"127","messageId":"128","endLine":1,"endColumn":44},{"ruleId":"125","severity":1,"message":"131","line":1,"column":46,"nodeType":"127","messageId":"128","endLine":1,"endColumn":52},{"ruleId":"125","severity":1,"message":"132","line":9,"column":10,"nodeType":"127","messageId":"128","endLine":9,"endColumn":22},{"ruleId":"125","severity":1,"message":"133","line":14,"column":3,"nodeType":"127","messageId":"128","endLine":14,"endColumn":10},{"ruleId":"125","severity":1,"message":"134","line":9,"column":10,"nodeType":"127","messageId":"128","endLine":9,"endColumn":22},{"ruleId":"125","severity":1,"message":"134","line":9,"column":10,"nodeType":"127","messageId":"128","endLine":9,"endColumn":22},"no-native-reassign",["135"],"no-negated-in-lhs",["136"],"no-unused-vars","'Card' is defined but never used.","Identifier","unusedVar","'Tag' is defined but never used.","'Button' is defined but never used.","'Drawer' is defined but never used.","'FormOutlined' is defined but never used.","'Divider' is defined but never used.","'EditOutlined' is defined but never used.","no-global-assign","no-unsafe-negation"]